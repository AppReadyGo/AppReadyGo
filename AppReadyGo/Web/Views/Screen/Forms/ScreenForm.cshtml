@model AppReadyGo.Model.Pages.Application.ScreenModel
@Html.HiddenFor(m => m.ApplicationId)
@Html.HiddenFor(m => m.FileExtention)
<p class="required">
    <label for="file">Image:</label><br> 
    <input type="file" name="file" id="file" />
    @Html.ValidationMessage("file", new { @class = "error" })
</p>
<p class="required">
    @Html.LabelFor(m => m.Path)<br> 
    @if (((IEnumerable<SelectListItem>)ViewData["predefinedPathes"]).Count() > 1)
    {
        @Html.DropDownList("predefinedPathes", (IEnumerable<SelectListItem>)ViewData["predefinedPathes"])<br />
    }
    @Html.TextBoxFor(m => m.Path, new { MaxLength = 256 })
    @Html.ValidationMessageFor(m => m.Path, null, new { @class = "error" })
</p>
<p class="required">
    <label>@Html.LabelFor(m => m.Width) X @Html.LabelFor(m => m.Height)</label><br> 
    @if (((IEnumerable<SelectListItem>)ViewData["predefinedPathes"]).Count() > 1)
    {
        @Html.DropDownList("predefinedSizes", (IEnumerable<SelectListItem>)ViewData["predefinedSizes"])<br />
    }
    <span class="size">@Html.TextBoxFor(m => m.Width, new { MaxLength = 5 })<span>X</span>@Html.TextBoxFor(m => m.Height, new { MaxLength = 5 })</span>
    @Html.ValidationMessageFor(m => m.Width, null, new { @class = "error" })@Html.ValidationMessageFor(m => m.Height, null, new { @class = "error" })
</p>
<p class="actions">
    @Html.ValidationMessage("error", new { @class = "error" })
    <input type="submit" value="Save" class="button green medium"/>
    <a href="/Application/Screens/@Model.ApplicationId">Cancel</a>
</p>
