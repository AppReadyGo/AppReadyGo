@using AppReadyGo.Helpers;
@model AppReadyGo.Web.Model.Pages.Analytics.IndexModel
@{
    Layout = "~/Views/Analytics/_Analytics.cshtml";
}
@section title { Task Analytics }
@section header 
{
    <script src="@Html.Content("~/ThridParty/flot-0.8.0/jquery.flot.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var colors = ["#AA4643", "#89A54E", "#4572A7", "#4572A7"];
            var data = [@(string.Join(",", Model.ViewsGraphData.Select((x, i) =>"{ data: [[" + (i+1) + ", " + Model.ViewsGraphData[i].Value + "]], bars: { lineWidth: 0, fillColor: colors[" + i + "], barWidth: 0.5 } }")))];
            $.plot($("#views_graph"), data, {
                xaxis: {
                    min: 0,
                    max: 5,
                    ticks: [[ @(Html.Raw(string.Join("], [", Model.ViewsGraphData.Select((x,i) => string.Format("{0}, '{1}'", i + 1, x.Key ))))) ]],
                    tickLength: 1
                },
                grid: {
                    hoverable: true,
                    clickable: false,
                    borderWidth: 0
                },
                yaxis: {
                    tickLength: 0,
                    ticks: false
                },
                series: {
                    bars: {
                        show: true,
                        align: "center"
                        //fillColor : { colors : ["#32b9ff", "#2b78a0"] }
                    }
                }
            });
            data = [@(string.Join(",", Model.ClicksGraphData.Select((x, i) =>"{ data: [[" + (i+1) + ", " + x.Value + "]], bars: { lineWidth: 0, fillColor: colors[" + i + "], barWidth: 0.5 } }")))];
            $.plot($("#clicks_graph"), data, {
                xaxis: {
                    min: 0,
                    max: 5,
                    ticks: [[ @(Html.Raw(string.Join("], [", Model.ClicksGraphData.Select((x,i) => string.Format("{0}, '{1}'", i + 1, x.Key )))))]],
                    tickLength: 1
                },
                grid: {
                    hoverable: true,
                    clickable: false,
                    borderWidth: 0
                },
                yaxis: {
                    tickLength: 0,
                    ticks: false
                },
                series: {
                    bars: {
                        show: true,
                        align: "center"
                        //fillColor : { colors : ["#32b9ff", "#2b78a0"] }
                    }
                }
            });
            data = [@(string.Join(",", Model.ScrollsGraphData.Select((x, i) =>"{ data: [[" + (i+1) + ", " + x.Value + "]], bars: { lineWidth: 0, fillColor: colors[" + i + "], barWidth: 0.5 } }")))];
            $.plot($("#scrolls_graph"), data, {
                xaxis: {
                    min: 0,
                    max: 5,
                    ticks: [[ @(Html.Raw(string.Join("], [", Model.ScrollsGraphData.Select((x,i) => string.Format("{0}, '{1}'", i + 1, x.Key )))))]],
                    tickLength: 1
                },
                grid: {
                    hoverable: true,
                    clickable: false,
                    borderWidth: 0
                },
                yaxis: {
                    tickLength: 0,
                    ticks: false
                },
                series: {
                    bars: {
                        show: true,
                        align: "center"
                        //fillColor : { colors : ["#32b9ff", "#2b78a0"] }
                    }
                }
            });
      });
    </script>
}
<p><label>Downloads:</label> @Model.Downloads</p>
<p><label>Different Devices:</label> @Model.Devices</p>
<p><label>Reported Screens:</label> @Model.Screens</p>
<p><label>Using Sessions:</label> @Model.Sessions</p>
<p><label>Average Sessions Duration:</label> @Model.AvSessionDuration</p>
<p><label>Average Clicks per Sesson:</label> @Model.AvClicks</p>
<p><label>Average Scrolls per Sesson:</label> @Model.AvScrolls</p>
<div class="graph-wrapper">
    <label>Views by Path</label>
    <div><div id="views_graph"></div></div>
</div>
<div class="graph-wrapper">
    <label>Clicks by Path</label>
    <div><div id="clicks_graph"></div></div>
</div>
<div class="graph-wrapper">
    <label>Scrolls by Path</label>
    <div><div id="scrolls_graph"></div></div>
</div>



