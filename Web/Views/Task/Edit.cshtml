@using AppReadyGo.Helpers;
@model AppReadyGo.Model.Pages.Application.TaskModel
@{
    Layout = "~/Views/Shared/_AfterLogin.cshtml";
}
@section title { Portfolios }
@section header {}
<div class="crumb">
    <div class="border-right">
		<div class="border-left">
			<div class="inner">
                <ul>
		           <li><a href="/Application"><h4>Dashboard</h4></a></li>
                   <li><h4>New Task</h4></li>
		        </ul>
			</div>
		</div>
    </div>
</div>
<div style="clear:both;"></div>
<div class="content-wrapper">
    <article class="center">
        <div class="form-wrapper">
            <header>
                <h1>Task Details</h1>
            </header>
            <div class="sub-wrapper">
            @using (Html.BeginForm()) 
            {
                @Html.HiddenFor(m => m.Id)
                <p>
                    @Html.LabelFor(m => m.DescriptionId)<br> 
                    @Html.DropDownListFor(m => m.DescriptionId, Model.Descriptions)
                    @Html.ValidationMessageFor(m => m.DescriptionId, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.ApplicationId)<br> 
                    @Html.DropDownListFor(m => m.ApplicationId, Model.Applications) <a href="/Application/New">Upload a new</a>
                    @Html.ValidationMessageFor(m => m.ApplicationId, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.Audence)<br> 
                    @Html.DropDownListFor(m => m.Audence, Model.Audences) @*<a href="/Plan/Edit">Hire more</a>*@
                    @Html.ValidationMessageFor(m => m.Audence, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.AgeRange)<br> 
                    @Html.DropDownListFor(m => m.AgeRange, Model.AgeRanges)
                    @Html.ValidationMessageFor(m => m.AgeRange, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.Gender)<br> 
                    @Html.DropDownListFor(m => m.Gender, Model.Genders)
                    @Html.ValidationMessageFor(m => m.Gender, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.Country)<br> 
                    @Html.DropDownListFor(m => m.Country, Model.Countries)
                    @Html.ValidationMessageFor(m => m.Country, null, new { @class = "error" })
                </p>
                <p>
                    @Html.LabelFor(m => m.Zip)<br> 
                    @Html.TextBoxFor(m => m.Zip)
                    @Html.ValidationMessageFor(m => m.Zip, null, new { @class = "error" })
                </p>
                if(!string.IsNullOrEmpty(Model.PublishDate))
                {
                    <p><label>Published on </label><span>@Model.PublishDate</span></p>
                }
                <p class="actions">
                    @Html.ValidationSummary(true, null, new { @class = "error" })
                    @if(!string.IsNullOrEmpty(Model.PublishDate))
                    {
                        <button name="Action" value="UnPublish" class="green-btn">Unpublish</button>
                    }
                    else
                    {
                        <button name="Action" value="Publish" class="green-btn">Publish</button>
                    }
                    <button name="Action" value="Save" class="green-btn">Save</button>
                    <a href="/Application">Cancel</a>
                </p>
            }
            </div>
        </div>
    </article>
</div>
<div style="clear:both"></div>

